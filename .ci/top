// vi:ft=groovy:

pipeline {
    agent any

    options {
        timestamps()
        ansiColor 'xterm'
    }

    environment {
        PY_COLORS = 1
    }

    stages {
        stage('parallel') {
            parallel {

                stage('testing') {
                    agent { docker { image "jettero/kersplat:centos-v1.0.6" } }
                    steps {
                        sh 'pyenv install 2.7.14 || echo "python 2.7.14 was already installed"'
                        sh 'eval "$(pyenv init -)"; pyenv local 2.7.14; pyenv shell 2.7.14'
                        sh 'bash tests/pytest-runner.sh'
                    }
                }

                stage('linting') {
                    agent { docker { image "jettero/kersplat:centos-v1.0.6" } }
                    steps {
                        sh 'pyenv install 2.7.14 || echo "python 2.7.14 was already installed"'
                        sh 'eval "$(pyenv init -)"; pyenv local 2.7.14; pyenv shell 2.7.14'
                        sh 'bash tests/pylint-runner.sh'
                    }
                }

            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'pytest-*.txt'
            archiveArtifacts artifacts: 'pylint-*.txt'
        }
    }
}
